#!/usr/bin/env bash

echo "-----> DatadogBuildpack/supply"


BIN_DIR=$(cd $(dirname $0); pwd)
ROOT_DIR=$(dirname ${BIN_DIR})
BUILD_DIR=$1
CACHE_DIR=$2
DEPS_DIR=$3
DEPS_IDX=$4
DATADOG_DIR="${BUILD_DIR}/.datadog"

mkdir -p "${DATADOG_DIR}/scripts"
cp "${ROOT_DIR}/lib/scripts/update_agent_config.sh" "${DATADOG_DIR}/scripts/update_agent_config.sh"
chmod +x "${DATADOG_DIR}/scripts/update_agent_config.sh"
cp "${ROOT_DIR}/lib/scripts/get_tags.rb" "${DATADOG_DIR}/scripts/get_tags.rb"


if ! which ruby > /dev/null; then
  echo "Installing Ruby"
  tar -xzf "${ROOT_DIR}/lib/ruby_3.0.5.tgz" -C "$DEPS_DIR/$DEPS_IDX" && echo "Ruby Install finished"
  export PATH="$DEPS_DIR/$DEPS_IDX/bin/:$PATH"
fi

# for subsquent buildpacks
echo "config: {}
name: datadog
version: 4.37.0" > "$DEPS_DIR/$DEPS_IDX/config.yml"

echo "Installing Datadog IOT Agent, Dogstatsd and Trace Agent"

mkdir -p "${BUILD_DIR}/.profile.d"

cp -r "${ROOT_DIR}/lib/dist" "${DATADOG_DIR}"
cp -r "${ROOT_DIR}/lib/conf.d" "${DATADOG_DIR}"
if [ -f "${ROOT_DIR}/lib/agent" ]; then
  cp "${ROOT_DIR}/lib/agent" "${DATADOG_DIR}/agent"
fi
if [ -f "${ROOT_DIR}/lib/dogstatsd" ]; then
  cp "${ROOT_DIR}/lib/dogstatsd" "${DATADOG_DIR}/dogstatsd"
fi
cp "${ROOT_DIR}/lib/trace-agent" "${DATADOG_DIR}/trace-agent"

cp "${ROOT_DIR}/lib/scripts/create_logs_config.rb" "${DATADOG_DIR}/scripts/create_logs_config.rb"
cp "${ROOT_DIR}/lib/scripts/update_tags.rb" "${DATADOG_DIR}/scripts/update_tags.rb"

cp "${ROOT_DIR}/lib/scripts/parse_env_vars.rb" "${DATADOG_DIR}/scripts/parse_env_vars.rb"
cp "${ROOT_DIR}/lib/scripts/nc.rb" "${DATADOG_DIR}/scripts/nc.rb"

chmod +x "${DATADOG_DIR}/scripts/get_tags.rb"
chmod +x "${DATADOG_DIR}/scripts/create_logs_config.rb"
chmod +x "${DATADOG_DIR}/scripts/update_tags.rb"
chmod +x "${DATADOG_DIR}/scripts/parse_env_vars.rb"
chmod +x "${DATADOG_DIR}/scripts/nc.rb"

cp "${ROOT_DIR}/lib/scripts/utils.sh" "${DATADOG_DIR}/scripts/utils.sh"
cp "${ROOT_DIR}/lib/scripts/check_datadog.sh" "${DATADOG_DIR}/scripts/check_datadog.sh"

cp -r "${ROOT_DIR}/lib/test-endpoint.sh" "${BUILD_DIR}/.profile.d/00-test-endpoint.sh" # Make sure this is sourced first
cp "${ROOT_DIR}/lib/run-datadog.sh" "${BUILD_DIR}/.profile.d/01-run-datadog.sh"
cp "${ROOT_DIR}/lib/redirect-logs.sh" "${BUILD_DIR}/.profile.d/02-redirect-logs.sh"

cp "${ROOT_DIR}/VERSION" "${DATADOG_DIR}/VERSION"

if [ -f "${DATADOG_DIR}/agent" ]; then
  chmod +x "${DATADOG_DIR}/agent"
fi
if [ -f "${DATADOG_DIR}/dogstatsd" ]; then
  chmod +x "${DATADOG_DIR}/dogstatsd"
fi

chmod +x "${DATADOG_DIR}/scripts/utils.sh"
chmod +x "${DATADOG_DIR}/scripts/check_datadog.sh"

chmod +x "${DATADOG_DIR}/trace-agent"
chmod +x "${BUILD_DIR}/.profile.d/00-test-endpoint.sh"
chmod +x "${BUILD_DIR}/.profile.d/02-redirect-logs.sh"
chmod +x "${BUILD_DIR}/.profile.d/01-run-datadog.sh"

# export DD environment variables
. "${DATADOG_DIR}/scripts/utils.sh"

export PATH=/home/vcap/deps/$DEPS_IDX/bin:$PATH
dd_export_env "${DATADOG_DIR}/.raw_datadog_env"


echo "ruby version check:"
ruby -v

# sanitize env vars and export a new a env file
ruby "${DATADOG_DIR}/scripts/parse_env_vars.rb" "${DATADOG_DIR}/.raw_datadog_env" "${DATADOG_DIR}/.datadog_env"

# export DD_TAGS for ddtrace
DD_TAGS=$(ruby "${DATADOG_DIR}"/scripts/get_tags.rb)
export DD_TAGS
DD_DOGSTATSD_TAGS=$(ruby "${DATADOG_DIR}"/scripts/get_tags.rb)
export DD_DOGSTATSD_TAGS

# mark the script as finished, useful to sync the update_agent_config script
touch "${DATADOG_DIR}/.setup_completed"
